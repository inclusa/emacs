---
layout: post
title: 08 Buffer
date:  2017-03-08 00:00:00
---

Para entender el concepto de `buffer` debemos tener en cuenta que el `buffer` se refiere a la memoria RAM.
<br />
<br />
Cuando abrimos un archivo en el disco (memoria ROM) ocupa un espacio específico, mapeado, en la memoria RAM.
<br />
<br />
El `buffer` se refiere al espacio concreto que ocupa este archivo en RAM.
<br />
<br />
Por ejemplo, cuando en Python (lenguaje de programación) asignamos una variable `s` a un valor `5`, así: `s = 5`
<br />
<br />

El la variable `s` queda almacenada en un espacio concreto de la memoria RAM y cuando la llamamos `$s` nos devueve su valor, en este caso `5`.
<br />
<br />
Así el buffer se refiere al archivo cargado en RAM, que desaparecerá cuando apaguemos el ordenador o salgamos del programa.
<br />
<br />
Fijemonos en el menú Buffers de Emacs. Encontramos tres buffers que se cargan siempre:
<br />
<br />
*GNU Emacs* %

*scratch*

*Messages* %

<br />
<br />
Que esten cargados con asteriscos `*` indica que estan en RAM (buffer) pero no escritos en disco (ROM).
<br />
<br />
Así, si visitas `*Messages` observarás que tiene la función de `log` o bitácora donde se van acumulando los mensajes que te va dando Emacs.
<br />
<br />
Cuando sales, si no guardas los buffers en archivos específicos, se borran de la RAM liberándo el espacio, por lo que normalmente, guardarmos en disco los archivos para volver a recuperarlos cuando iniciemos el sistema.
<br />
<br />
`.` Indica que se trabaja en ese buffer

`%` Indica sólo lectura

`*` Indica que ese buffer está modificado (este símbolo sale cuando listamos los buffers no en el menú, que significa que está en RAM)

[https://www.gnu.org/software/emacs/manual/html_node/emacs/List-Buffers.html](https://www.gnu.org/software/emacs/manual/html_node/emacs/List-Buffers.html)
